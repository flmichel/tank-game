name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.2
  SQLX_FEATURES: "rustls,postgres"

jobs:
  server:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./server

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Install postgresql-client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Migrate database
        run: SKIP_DOCKER=true ./script/init_db.sh

      - name: Run tests
        run: cargo test

  game:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./game

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache Action
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test

  remote:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./remote

    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - name: Build and Test
        run: npm run build
